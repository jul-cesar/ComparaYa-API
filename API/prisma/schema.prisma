generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id         String    @id @default(uuid())
  name       String    @unique @db.VarChar(255)
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  products   Product[]
}

model Product {
  id             String          @id @default(uuid())
  name           String          @db.VarChar(255)
  image_url      String
  price_d1       Decimal?        @db.Decimal(10, 3)
  price_olim     Decimal?        @db.Decimal(10, 3)
  price_exito    Decimal?        @db.Decimal(10, 3)
  category_id    String
  created_at     DateTime        @default(now()) @db.Timestamp(6)
  updated_at     DateTime        @default(now()) @db.Timestamp(6)
  category       Category        @relation(fields: [category_id], references: [id], onDelete: Cascade)
  // price_histories price_history[]
  user_favorites user_favorite[]
}

// model price_history {
//   id         String    @id @default(uuid())
//   product_id String
//   price      String    @db.VarChar(255)
//   date       DateTime  @default(now()) @db.Timestamp(6)
//   product    product   @relation(fields: [product_id], references: [id], onDelete: Cascade)
// }

model Scraping_config {
  id              String   @id @default(uuid())
  website_name    String   @db.VarChar(255)
  base_url        String
  card_selector   String   @db.VarChar(255)
  name_selector   String   @db.VarChar(255)
  price_selector  String   @db.VarChar(255)
  img_selector    String   @db.VarChar(255)
  page_param_name String?  @db.VarChar(255)
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @default(now()) @db.Timestamp(6)
}

model User {
  id         String          @id @default(uuid())
  name       String          @db.VarChar(255)
  email      String          @unique @db.VarChar(255)
  password   String          @db.VarChar(255)
  rol        UserRols        @default(user)
  created_at DateTime        @default(now()) @db.Timestamp(6)
  updated_at DateTime        @default(now()) @db.Timestamp(6)
  favorites  user_favorite[]
}

model user_favorite {
  id         String   @id @default(uuid())
  user_id    String
  product_id String
  created_at DateTime @default(now()) @db.Timestamp(6)
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
}

enum UserRols {
  user
  admin
}
